

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<html>



<head>

<link rel="stylesheet" type="text/css" href="help.css">



<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=utf-8">

<title>Refactoring elements under source control</title>







</head>



<body>



<h1> Refactoring elements under source control</h1>

<p>The following topic contains information about refactoring Rational ClearCase
elements in the Rational Developer product.</p>

<p>It is good practice to make sure that all ClearCase elements are checked in
before starting a refactor operation. If you are using ClearCase UCM, you can
create a new activity for the refactor operation. When using UCM, a refactor operation
        always uses the current activity for all files that are checked out
during the refactor operation.</p>

<p style="margin-top: 12">When refactoring a package, the ClearCase SCM Adapter
performs a <a href="Move.htm">Move Elements</a> operation on the folder and checks out the files that reference this
package if they are checked in. When
refactoring a class name, the ClearCase SCM Adapter performs a <a href="Rename.htm">Rename Elements</a>
operation on the class name and checks out the files that reference this class
if they are checked in. When refactoring a method, only the files that reference
the method are checked out if they are already checked in.&nbsp;
<p style="margin-top: 12"><b>Attention:</b>&nbsp;</p>
<ul>
  <li>
    <p style="margin-top: 12">When you perform a refactor operation, you may be prompted with a list of files to check out. If you clear the check box associated
with any of the files in the Check Out Element(s) dialog box, the refactor
operation fails.&nbsp;</li>
  <li>
    <p style="margin-top: 12">At the conclusion of a refactor operation, one or
    more files or folders may be checked out. The refactor operation is not
    complete until all relevant files and folders are checked in. If all
    elements were checked in before refactoring, you can ascertain if any are
    checked out after refactoring and check in those elements. You can also use
    the <b>ClearCase &gt;</b> <a href="ShPrjCkO.htm">Find Checkouts</a> option
    (on Windows platforms) to locate checked out elements. If you are using
    ClearCase UCM and you created a new activity for the refactor operation, you
    can verify that all files associated with the activity are checked in.</li>
</ul>
<p style="margin-top: 12">The following preferences may also affect the refactor
process since they control the automatic checkout and hijacking processes:



<ul>
  <li><a href="PrIntEd.htm">Checked in files are edited by an internal, interactive editor</a></li>
  <li><a href="PrNIntEd.htm">Checked in files are edited by an internal, non-interactive editor</a></li>
  <li><a href="PrValSav.htm">Checked in files are saved by an internal editor</a></li>
  <li><a href="PrAlwHij.htm">Always hijack in snapshot views</a></li>
  <li><a href="PrHijDsc.htm">Hijack in snapshot views when disconnected</a></li>
</ul>



      <p style="margin-top: 12">If you cancel the refactor operation (<b><a href="UndoCOut.htm">Undo Check Out</a></b>)
      it does not undo modifications made to other files and folders. If you
      need to undo a refactor operation, IBM suggests that you perform another
      refactor operation in which you change the name or location back to what
      it was prior to refactoring.&nbsp;

      <p style="margin-top: 12"><B>Related tasks<br>
      </B><a href="PrNIntEd.htm">When checked-in files are edited by an internal, non-interactive editor</a>



<p class="copyright">(C) Copyright IBM Corporation 2000, 2006. All Rights Reserved.</p>



</body>



</html>

